=== TODO


- applikation
- maven submodule
- admin service ausplitten + finalisieren
- angular test

- doku
- fehler join?
- benchmark?
- kopieren nach service :-)
- entity status
- version counter
- date?

=== LATER

angular :-) mit builder simple

=== NOW

- describe
- projektion mit id???

- relation fehler?
- session überlegen
- modifed != me
- version counter


=== DENK NACH

id,         type versionCOunter, ...

entity(id), type attribute x_value

id, type [attribute] super_attribut_values



fast identisch



properties ( val propergyEntity: PropertyEntity)
   -> attribute(val value)
   -> relation(val set)

Reader sieht aus  (obj: DataObject, attribute: PropertyEntity)
   -> obj.values[property.index] = ...

for ( property in ...)
   (reader for property).read(propery)

Writer (state: TransactionState, obj: DataObject, index: Int, attribute: PropertyEntity )
   ->  attribute.intValue = ...

PROBLEM:

   wir haben properties UND
   wir haben eine einige Entity??

   Person {
      id             -> Entity
      status {       -> Entity
         created...
      }
      name            -> Property
   }

UNNU???

Beim erzeugen werden Propertues mit Entita verknüpft


ÜBRUGENS: wir brauchen keinen snpashot: die entity ist snapshot!!

=== DONE

- boolean expression
- updatePerson -> [Person]n
- restliche filter
- fix create relation
- mehrwertige relation
- create + realtion?
- mutation relations?
- join für einwertige...
- bulk update
- delete-person
- mutation: create/update
- postman test
- restliche prädikate
- Spring einbinden
- überlegen syntax select?
- argument
- resolver?????
- TEST
- Schema selber machen
- Transaktionsklammer
- Spring
- @Components
- beispiel java klasse
- hello world